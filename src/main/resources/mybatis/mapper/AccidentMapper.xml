<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.igeek.mapper.AccidentMapper" >
  <resultMap id="BaseResultMap" type="com.igeek.pojo.Accident" >
    <id column="accidentno" property="accidentno" jdbcType="INTEGER" />
    <result column="driver" property="driver" jdbcType="VARCHAR" />
    <result column="carbrand" property="carbrand" jdbcType="VARCHAR" />
    <result column="accidentTime" property="accidenttime" jdbcType="TIMESTAMP" />
    <result column="accidentPlace" property="accidentplace" jdbcType="VARCHAR" />
    <result column="accidentDetails" property="accidentdetails" jdbcType="VARCHAR" />
    <result column="responsibility" property="responsibility" jdbcType="VARCHAR" />
    <result column="maintenanceFactory" property="maintenancefactory" jdbcType="VARCHAR" />
    <result column="repairDate" property="repairdate" jdbcType="DATE" />
    <result column="repairEndDate" property="repairenddate" jdbcType="DATE" />
    <result column="damageFee" property="damagefee" jdbcType="DECIMAL" />
    <result column="InsuranceClaimAmount" property="insuranceclaimamount" jdbcType="DECIMAL" />
    <result column="driverBorneAmount" property="driverborneamount" jdbcType="DECIMAL" />
    <result column="maintenanceCosts" property="maintenancecosts" jdbcType="DECIMAL" />
    <result column="maintenanceContents" property="maintenancecontents" jdbcType="VARCHAR" />
    <result column="enclosure" property="enclosure" jdbcType="VARCHAR" />
    <result column="filename" property="filename" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    accidentno, driver, carbrand, accidentTime, accidentPlace, accidentDetails, responsibility, 
    maintenanceFactory, repairDate, repairEndDate, damageFee, InsuranceClaimAmount, driverBorneAmount, 
    maintenanceCosts, maintenanceContents, enclosure, filename
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.igeek.pojo.example.AccidentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from accident
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from accident
    where accidentno = #{accidentno,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from accident
    where accidentno = #{accidentno,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.igeek.pojo.example.AccidentExample" >
    delete from accident
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.igeek.pojo.Accident" >
    insert into accident (accidentno, driver, carbrand, 
      accidentTime, accidentPlace, accidentDetails, 
      responsibility, maintenanceFactory, repairDate, 
      repairEndDate, damageFee, InsuranceClaimAmount, 
      driverBorneAmount, maintenanceCosts, maintenanceContents, 
      enclosure, filename)
    values (#{accidentno,jdbcType=INTEGER}, #{driver,jdbcType=VARCHAR}, #{carbrand,jdbcType=VARCHAR}, 
      #{accidenttime,jdbcType=TIMESTAMP}, #{accidentplace,jdbcType=VARCHAR}, #{accidentdetails,jdbcType=VARCHAR}, 
      #{responsibility,jdbcType=VARCHAR}, #{maintenancefactory,jdbcType=VARCHAR}, #{repairdate,jdbcType=DATE}, 
      #{repairenddate,jdbcType=DATE}, #{damagefee,jdbcType=DECIMAL}, #{insuranceclaimamount,jdbcType=DECIMAL}, 
      #{driverborneamount,jdbcType=DECIMAL}, #{maintenancecosts,jdbcType=DECIMAL}, #{maintenancecontents,jdbcType=VARCHAR}, 
      #{enclosure,jdbcType=VARCHAR}, #{filename,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.igeek.pojo.Accident" >
    insert into accident
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accidentno != null" >
        accidentno,
      </if>
      <if test="driver != null" >
        driver,
      </if>
      <if test="carbrand != null" >
        carbrand,
      </if>
      <if test="accidenttime != null" >
        accidentTime,
      </if>
      <if test="accidentplace != null" >
        accidentPlace,
      </if>
      <if test="accidentdetails != null" >
        accidentDetails,
      </if>
      <if test="responsibility != null" >
        responsibility,
      </if>
      <if test="maintenancefactory != null" >
        maintenanceFactory,
      </if>
      <if test="repairdate != null" >
        repairDate,
      </if>
      <if test="repairenddate != null" >
        repairEndDate,
      </if>
      <if test="damagefee != null" >
        damageFee,
      </if>
      <if test="insuranceclaimamount != null" >
        InsuranceClaimAmount,
      </if>
      <if test="driverborneamount != null" >
        driverBorneAmount,
      </if>
      <if test="maintenancecosts != null" >
        maintenanceCosts,
      </if>
      <if test="maintenancecontents != null" >
        maintenanceContents,
      </if>
      <if test="enclosure != null" >
        enclosure,
      </if>
      <if test="filename != null" >
        filename,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accidentno != null" >
        #{accidentno,jdbcType=INTEGER},
      </if>
      <if test="driver != null" >
        #{driver,jdbcType=VARCHAR},
      </if>
      <if test="carbrand != null" >
        #{carbrand,jdbcType=VARCHAR},
      </if>
      <if test="accidenttime != null" >
        #{accidenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="accidentplace != null" >
        #{accidentplace,jdbcType=VARCHAR},
      </if>
      <if test="accidentdetails != null" >
        #{accidentdetails,jdbcType=VARCHAR},
      </if>
      <if test="responsibility != null" >
        #{responsibility,jdbcType=VARCHAR},
      </if>
      <if test="maintenancefactory != null" >
        #{maintenancefactory,jdbcType=VARCHAR},
      </if>
      <if test="repairdate != null" >
        #{repairdate,jdbcType=DATE},
      </if>
      <if test="repairenddate != null" >
        #{repairenddate,jdbcType=DATE},
      </if>
      <if test="damagefee != null" >
        #{damagefee,jdbcType=DECIMAL},
      </if>
      <if test="insuranceclaimamount != null" >
        #{insuranceclaimamount,jdbcType=DECIMAL},
      </if>
      <if test="driverborneamount != null" >
        #{driverborneamount,jdbcType=DECIMAL},
      </if>
      <if test="maintenancecosts != null" >
        #{maintenancecosts,jdbcType=DECIMAL},
      </if>
      <if test="maintenancecontents != null" >
        #{maintenancecontents,jdbcType=VARCHAR},
      </if>
      <if test="enclosure != null" >
        #{enclosure,jdbcType=VARCHAR},
      </if>
      <if test="filename != null" >
        #{filename,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.igeek.pojo.example.AccidentExample" resultType="java.lang.Integer" >
    select count(*) from accident
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update accident
    <set >
      <if test="record.accidentno != null" >
        accidentno = #{record.accidentno,jdbcType=INTEGER},
      </if>
      <if test="record.driver != null" >
        driver = #{record.driver,jdbcType=VARCHAR},
      </if>
      <if test="record.carbrand != null" >
        carbrand = #{record.carbrand,jdbcType=VARCHAR},
      </if>
      <if test="record.accidenttime != null" >
        accidentTime = #{record.accidenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.accidentplace != null" >
        accidentPlace = #{record.accidentplace,jdbcType=VARCHAR},
      </if>
      <if test="record.accidentdetails != null" >
        accidentDetails = #{record.accidentdetails,jdbcType=VARCHAR},
      </if>
      <if test="record.responsibility != null" >
        responsibility = #{record.responsibility,jdbcType=VARCHAR},
      </if>
      <if test="record.maintenancefactory != null" >
        maintenanceFactory = #{record.maintenancefactory,jdbcType=VARCHAR},
      </if>
      <if test="record.repairdate != null" >
        repairDate = #{record.repairdate,jdbcType=DATE},
      </if>
      <if test="record.repairenddate != null" >
        repairEndDate = #{record.repairenddate,jdbcType=DATE},
      </if>
      <if test="record.damagefee != null" >
        damageFee = #{record.damagefee,jdbcType=DECIMAL},
      </if>
      <if test="record.insuranceclaimamount != null" >
        InsuranceClaimAmount = #{record.insuranceclaimamount,jdbcType=DECIMAL},
      </if>
      <if test="record.driverborneamount != null" >
        driverBorneAmount = #{record.driverborneamount,jdbcType=DECIMAL},
      </if>
      <if test="record.maintenancecosts != null" >
        maintenanceCosts = #{record.maintenancecosts,jdbcType=DECIMAL},
      </if>
      <if test="record.maintenancecontents != null" >
        maintenanceContents = #{record.maintenancecontents,jdbcType=VARCHAR},
      </if>
      <if test="record.enclosure != null" >
        enclosure = #{record.enclosure,jdbcType=VARCHAR},
      </if>
      <if test="record.filename != null" >
        filename = #{record.filename,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update accident
    set accidentno = #{record.accidentno,jdbcType=INTEGER},
      driver = #{record.driver,jdbcType=VARCHAR},
      carbrand = #{record.carbrand,jdbcType=VARCHAR},
      accidentTime = #{record.accidenttime,jdbcType=TIMESTAMP},
      accidentPlace = #{record.accidentplace,jdbcType=VARCHAR},
      accidentDetails = #{record.accidentdetails,jdbcType=VARCHAR},
      responsibility = #{record.responsibility,jdbcType=VARCHAR},
      maintenanceFactory = #{record.maintenancefactory,jdbcType=VARCHAR},
      repairDate = #{record.repairdate,jdbcType=DATE},
      repairEndDate = #{record.repairenddate,jdbcType=DATE},
      damageFee = #{record.damagefee,jdbcType=DECIMAL},
      InsuranceClaimAmount = #{record.insuranceclaimamount,jdbcType=DECIMAL},
      driverBorneAmount = #{record.driverborneamount,jdbcType=DECIMAL},
      maintenanceCosts = #{record.maintenancecosts,jdbcType=DECIMAL},
      maintenanceContents = #{record.maintenancecontents,jdbcType=VARCHAR},
      enclosure = #{record.enclosure,jdbcType=VARCHAR},
      filename = #{record.filename,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.igeek.pojo.Accident" >
    update accident
    <set >
      <if test="driver != null" >
        driver = #{driver,jdbcType=VARCHAR},
      </if>
      <if test="carbrand != null" >
        carbrand = #{carbrand,jdbcType=VARCHAR},
      </if>
      <if test="accidenttime != null" >
        accidentTime = #{accidenttime,jdbcType=TIMESTAMP},
      </if>
      <if test="accidentplace != null" >
        accidentPlace = #{accidentplace,jdbcType=VARCHAR},
      </if>
      <if test="accidentdetails != null" >
        accidentDetails = #{accidentdetails,jdbcType=VARCHAR},
      </if>
      <if test="responsibility != null" >
        responsibility = #{responsibility,jdbcType=VARCHAR},
      </if>
      <if test="maintenancefactory != null" >
        maintenanceFactory = #{maintenancefactory,jdbcType=VARCHAR},
      </if>
      <if test="repairdate != null" >
        repairDate = #{repairdate,jdbcType=DATE},
      </if>
      <if test="repairenddate != null" >
        repairEndDate = #{repairenddate,jdbcType=DATE},
      </if>
      <if test="damagefee != null" >
        damageFee = #{damagefee,jdbcType=DECIMAL},
      </if>
      <if test="insuranceclaimamount != null" >
        InsuranceClaimAmount = #{insuranceclaimamount,jdbcType=DECIMAL},
      </if>
      <if test="driverborneamount != null" >
        driverBorneAmount = #{driverborneamount,jdbcType=DECIMAL},
      </if>
      <if test="maintenancecosts != null" >
        maintenanceCosts = #{maintenancecosts,jdbcType=DECIMAL},
      </if>
      <if test="maintenancecontents != null" >
        maintenanceContents = #{maintenancecontents,jdbcType=VARCHAR},
      </if>
      <if test="enclosure != null" >
        enclosure = #{enclosure,jdbcType=VARCHAR},
      </if>
      <if test="filename != null" >
        filename = #{filename,jdbcType=VARCHAR},
      </if>
    </set>
    where accidentno = #{accidentno,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.igeek.pojo.Accident" >
    update accident
    set driver = #{driver,jdbcType=VARCHAR},
      carbrand = #{carbrand,jdbcType=VARCHAR},
      accidentTime = #{accidenttime,jdbcType=TIMESTAMP},
      accidentPlace = #{accidentplace,jdbcType=VARCHAR},
      accidentDetails = #{accidentdetails,jdbcType=VARCHAR},
      responsibility = #{responsibility,jdbcType=VARCHAR},
      maintenanceFactory = #{maintenancefactory,jdbcType=VARCHAR},
      repairDate = #{repairdate,jdbcType=DATE},
      repairEndDate = #{repairenddate,jdbcType=DATE},
      damageFee = #{damagefee,jdbcType=DECIMAL},
      InsuranceClaimAmount = #{insuranceclaimamount,jdbcType=DECIMAL},
      driverBorneAmount = #{driverborneamount,jdbcType=DECIMAL},
      maintenanceCosts = #{maintenancecosts,jdbcType=DECIMAL},
      maintenanceContents = #{maintenancecontents,jdbcType=VARCHAR},
      enclosure = #{enclosure,jdbcType=VARCHAR},
      filename = #{filename,jdbcType=VARCHAR}
    where accidentno = #{accidentno,jdbcType=INTEGER}
  </update>
</mapper>